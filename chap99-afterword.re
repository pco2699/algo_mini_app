= あとがき

最後まで本書をお読みいただきありがとうございました。
最後に、伝えたいこととして「アルゴリズムはたのしい」「アプリ開発はたのしい」という2つの思いがあります。

=== アルゴリズムはたのしい

まえがきでも話した通り、自分は、最近アルゴリズムを勉強しはじめるまで、アルゴリズムに対してあまりいい印象がありませんでした。
具体的には、次のようなイメージです。

 * 大学の時の分厚い、つまらなさそうな教科書
 * 競技プログラミングのようなガチで頭のいい人がやるもの

でも、蓋を開けてみると、まるでクイズ、クロスワードパズルや数独のような、とても楽しいものでした。
今でも、やる必要が無いのに、@<tt>{AtCoder}の問題や@<tt>{LeetCode}を暇な時に解いてしまうのは、楽しいからです。

競技プログラミングについては、こんな偉そうにアルゴリズムの本を書いてますが、コンテストなどには出たことは無いですし
実際出ても、バシバシ問題が解けてランクを上げられるほどアルゴリズムが得意か、というとそこまででは無いです。

ただ、個人的に、思うのは競技プログラミング以外でもアルゴリズムを楽しむ方法はあります。

競技プログラミングだと時間に追われますが、それこそ日曜の昼下がりにクロスワードパズルを解く代わりに、@<tt>{AtCoder}のアルゴリズムの問題を
一問解く、というアルゴリズムの楽しみ方ってアリなんじゃないか、と思ってます。

一見、めっちゃ難しそうな問題でも、意外な方法で簡単に解けたり、うんうん唸って考えて書いたアルゴリズムで即答できたりすると、それこそ脳汁が出ます。

そういう人が少しでも増えて、一緒にそういうことを話せる人が増えたらいいな、と思っています。

=== アプリ開発はたのしい

自分は、バックエンドエンジニアなので、Javaで渋いAPIとニラメッコしたり、不吉な臭いのするコードをリファクタリングしたりしてます。
一方で、画面を新規開発で作ったり、はあまりしません。そのため、土日は、フロントの勉強がてら@<tt>{Nuxt.js}などで画面をつくりつつアプリを開発するのが好きです。

他の人のアイデアを聞いて、素早く画面にしたり、思いついたアイデアをガーッと土日でアプリにしてしまうのはご飯を食べるのを忘れてしまうぐらい面白い体験です。

ちょっとしたWebアプリであれば、そこまで難しい知識がなくても、@<tt>{React}や@<tt>{Vue}、今回取り上げた@<tt>{Nuxt.js}などと@<tt>{firebase}を
組み合わせれば、サクッと簡単なアプリが作れてしまいます。

この体験も、アルゴリズムと同じぐらい没頭してしまう体験で、とても楽しいです。

自分はこの2つの「たのしい」を組み合わせて、本を書いたら面白い本になるのでは、と思い、本書を書くに至りました。

=== さいごに

もし、この本を読んで、楽しかった！のような感想や、ここを直してほしい！というようなフィードバックがあれば
@pco2699でTwitterをやっていますので、DMをいただけたらと思います。（ついでに、フォローしていただけると私が泣いて喜びます。）

本書は、次の通り続刊予定です。
 
 2. ソート 編
 3. 二分木/DFS/BFS 編
 4. グラフ/ダイクストラ法 編
 5. 動的計画法 編